.TH GCODE-TEXT 1
.SH NAME
gcode-svg \- render SVG as gcode
.SH SYNOPSIS
gcode-svg [options] [input files] ...
.SH DESCRIPTION
.PP
\fIGcode-svg\fP renders stroked SVG elements to gcode. Each SVG path is
drawn using selectable speed and feed values based on a
color-to-parameter mapping file.
.SH USAGE
.PP
An un-flagged argument is treated as an input file.
.PP
Options are as follows:
.TP
.B "--help,--usage"
Print a help/usage message and exit.
.TP
.BI "-V,--version"
Prints the version number and immediately exits.
.TP
.BI "-i,--inch"
Use inch units in the generated file. This is the default.
.TP
.BI "-m,--mm"
Use millimeter units in the generated file.
.TP
.BI "--tesselate"
Tesselate splines even when the output device supports them natively.
.TP
.BI "--sheer " sheer
Set the sheer amount for oblique glyphs.
.TP
.BI "-f,--flatness " flatness
Set the spline decomposition tolerance in output units. The default is
0.001.
.TP
.BI "--feed " feed
Set the feed rate. Note that this value depends on the units in use.
.TP
.BI "--speed " speed
Set the spindle speed. Nominally in RPM, check your device documentation
for non-rotating tools to understand what it does.
.TP
.BI "-d,--device " device-spec
Specifies a device file. This is a JSON file containing
definitions for drawing to the target. See the DEVICE SPEC section
below.
.TP
.BI "-S,--settings " setting,...
Specifies a comma-separated list of device-specific settings. See
the "settings" and "setting-values" items in the DEVICE SPEC section below.
.TP
.BI "-o,--output " output
Specifies the output file name.
.TP
.BI "-C,--config-dir " directory
Specifies an additional path to device configuration files. This
argument may be repeated.
.TP
.BI "-p,--params " parameter-file
Specifies the parameters used during conversion. See the PARAMETERS
section below
.SH DEVICE SPEC
.PP
This file contains device-specific output customization, providing
control over the strings used to drive the target. This JSON file
should contain a single dictionary with keys mapping to string
values. Each value can contain embedded newlines as necessary;
gcode-text doesn't emit any newlines itself. If not provided in the
configuration file (or if no configuration file is provided), the
default values shown below will be used instead.
.TP
.BI "start " "G90\\\\\\\\nG17\\\\\\\\n"
Specifies a string emitted before any drawing is done to set up the
target.
.TP
.BI "settings " "\"\""
Specifies a C-style printf format for outputting device-specific
settings. If the string is empty, this element is skipped.
.TP
.BI "setting-values " "\"\""
Specifies an array of strings, one for each %s value present in the
"settings" value. These can be replaced on the command line using
the --settings option.
.TP
.BI "inch " "G20\\\\\\\\n"
Specifies the string to place the device in "inch" mode.
.TP
.BI "mm " "G21\\\\\\\\n"
Specifies the string to place the device in "millimeter" mode.
.TP
.BI "move " "G00 X%f Y%f\\\\\\\\n"
Specifies a C-style printf format for repositioning the output without
drawing. This format should contain two %f instances, the first is
used for the X coordinate, the second for Y.
.TP
.BI "draw " "G01 X%f Y%f F%f S%f\\\\\\\\n"
Specifies a C-style printf format for drawing a straight line. This
format should contain two to four %f instances, the first is used for the X
coordinate, the second for Y, followed by an (optional) feed rate and
(optional) spindle speed.
.TP
.BI "feed " "true or false"
Indicates whether the draw element includes a %f required for
the feed rate.
.TP
.BI "speed " "true or false"
Indicates whether the draw element includes a %f required for
the spindle speed.
.TP
.BI "y-invert " "true or false"
Indicates whether y values indicate upwards (true) or downwards
(false) motion.
.TP
.BI "stop " "M30\\\\\\\\n"
Specifies the string emitted after all drawing is done.
.PP
Gcode-text first emits the "start" string, then one of "inch" or
"mm". Then, drawing is done by emitting a sequence of "move" and
"draw" operations. Finally, drawing is finished with the "stop" string
and the output file is closed.
.PP
Here's what the default configuration looks like in JSON form:
.nf
{
    "start" : "G90\nG17\\n",
    "inch" : "G20\\n",
    "mm" : "G10\\n",
    "move" : "G00 X%f Y%f\\n",
    "draw" : "G01 X%f Y%f F%f S%f\\n",
    "feed" : true,
    "speed" : true,
    "stop" : "M30\\n"
}
.fi
.SH PARAMETER FILE
.PP
This (JSON formatted) file contains the mapping from stroke color to
feed and speed values. This allows you to construct a single SVG file
containing multiple operations that use different feed and speed
values. You can also place other configuration values in this file.
.PP
The parameter file contains a single JSON dictionary. Any long-form command line
option may be specified in this file by eliding the leading dashes and
replacing any other dashes with underscores. There are two additional
dictionary entries, the "params" entry and the "default" entry. The
"params" entry is an array of dictionaries, each dictionary contains
five keys:
.TP
.BI "order"
This number specifies the order in which elements will be drawn. This
allows the gcode file to draw things in an order different from how
they appear in the SVG file. You don't have to order things
sequentially; smaller order elements will be drawn before larger order
elements.
.TP
.BI "color"
This string specifies the color that this parameter will match in the
SVG file. Color matching is done by using the string value directly,
so an RGB value will be encoded as "#rrggbb". There's no slop in this
value; it must match exactly.
.TP
.BI "feed"
This number specifies the feed rate to use for matching elements. The
units depend upon the units of the generated gcode file.
.TP
.BI "speed"
This number specifies the spindle RPM to use for matching
elements. For tools without a spindle, check the documentation to
understand how this value is used.
.TP
.BI "name"
This string provides a name documenting the intended purpose of the
parameters. It isn't used by the software at all.
.SH AUTHOR
\fIGcode-svg\fP is the work of Keith Packard <keithp@keithp.com>.
.\"
.PP
Gcode-svg is
.br
Copyright 2023 Keith Packard.
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.
.PP
This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.
.PP
You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
