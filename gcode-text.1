.TH GCODE-TEXT 1
.SH NAME
gcode-text \- render text as gcode
.SH SYNOPSIS
gcode-text [options] [input files] ...
.SH DESCRIPTION
.PP
\fIGcode-text\fP renders stroked text to gcode. Each line of text is
rendered to separate rectangle, where rectangles may be defined
using a template or parametrically on the command line.
.PP
The source text may come from text files or from command line
arguments.
.PP
The provided font, Twin Sans, uses glyphs originally derived from the
Hershey fonts.
.SH USAGE
.PP
An un-flagged argument is treated as an input file.
.PP
Options are as follows:
.TP
.B "--help,--usage"
Print a help/usage message and exit.
.TP
.BI "-V,--version"
Prints the version number and immediately exits.
.TP
.BI "-i,--inch"
Use inch units in the generated file. This is the default.
.TP
.BI "-m,--mm"
Use millimeter units in the generated file.
.TP
.BI "-r,--rect"
Draw bounding rectangles
.TP
.BI "-O,--oblique"
Draw the glyphs using a sheer transform
.TP
.BI "--tesselate"
Tesselate splines even when the output device supports them natively.
.TP
.BI "--sheer " sheer
Set the sheer amount for oblique glyphs.
.TP
.BI "-f,--flatness " flatness
Set the spline decomposition tolerance in output units. The default is
0.001.
.TP
.BI "--font " SVG-font-file
Specify the filename of the font to draw with. Default is TwinSans.svg.
.TP
.BI "--feed " feed
Set the feed rate. Note that this value depends on the units in use.
.TP
.BI "--speed " speed
Set the spindle speed. Nominally in RPM, check your device documentation
for non-rotating tools to understand what it does.
.TP
.BI "-t,--template " template
Specifies a template file. Template files are in JSON format and
consist of an array of rectangles, each rectangle is an array of
four values -- [x, y, width, height].
.TP
.BI "-d,--device " device-spec
Specifies a device file. This is a JSON file containing
definitions for drawing to the target. See the DEVICE SPEC section
below.
.TP
.BI "-S,--settings " setting,...
Specifies a comma-separated list of device-specific settings. See
the "settings" and "setting-values" items in the DEVICE SPEC section below.
.TP
.BI "-o,--output " output
Specifies the output file name.
.TP
.BI "-b,--border " border
Defines the minimum space between text and each bounding
box. The default is 0.1.
.TP
.BI "-x,--start-x " start-x
Defines the starting X location for parametrically generated boxes.
.TP
.BI "-y,--start-y " start-y
Defines the starting Y location for parametrically generated boxes.
.TP
.BI "-w,--width " width
Defines the width for parametrically generated boxes.
.TP
.BI "-h,--height " height
Defines the height for parametrically generated boxes.
.TP
.BI "-X,--delta-x " delta-x
Defines the X offset between parametrically generated boxes.
.TP
.BI "-Y,--delta-y " delta-y
Defines the Y offset between parametrically generated boxes.
.TP
.BI "-c,--columns " columns
Defines the number of columns of parametrically generated boxes.
.TP
.BI "-v,--value " value
Sets an initial numeric value for generated text.
.TP
.BI "-n,--number " number
Specifies the number of generated numeric text values
.TP
.BI "-T,--text " string
Specifies a single line of text
.TP
.BI "-a,--align " {left,right,center}
Specifies the alignment of text within the box.
.TP
.BI "--font-metrics
Use font metrics (font height and string width) instead of ink bounds
for text layout.
.TP
.BI "-C,--config-dir " directory
Specifies an additional path to device configuration files. This
argument may be repeated.
.SH EXAMPLES
.PP
Draw "hello world" into a 4"x1" box at 1"x1"
.nf
$ gcode-text -o output.gcode -T "hello world" -w 4 -h 1 -x 1 -y 1
.fi
.PP
Draw numbers starting at 1 using the sample template
.nf
$ gcode-text -o output.gcode -v 1 -t sample-template.json
.fi
.PP
Draw 10 numbers from 10232 to 10241 in a 2x5 grid of 0.25"x0.1" boxes
spaced 4"x1.5" apart and offset by 1.5"x1" from the origin with a
border of 0.01" around the text:
.nf
$ gcode-text -o output.gcode -v 10232 -n 10 -c 2 -x 1.5 -y 1 -w .25 -h .1 -X 4 -Y 1.5 -b 0.01
.fi
.SH DEVICE SPEC
.PP
This file contains device-specific output customization, providing
control over the strings used to drive the target. This JSON file
should contain a single dictionary with keys mapping to string
values. Each value can contain embedded newlines as necessary;
gcode-text doesn't emit any newlines itself. If not provided in the
configuration file (or if no configuration file is provided), the
default values shown below will be used instead.
.TP
.BI "start " "G90\\\\\\\\nG17\\\\\\\\n"
Specifies a string emitted before any drawing is done to set up the
target.
.TP
.BI "settings " "\"\""
Specifies a C-style printf format for outputting device-specific
settings. If the string is empty, this element is skipped.
.TP
.BI "setting-values " "\"\""
Specifies an array of strings, one for each %s value present in the
"settings" value. These can be replaced on the command line using
the --settings option.
.TP
.BI "inch " "G20\\\\\\\\n"
Specifies the string to place the device in "inch" mode.
.TP
.BI "mm " "G21\\\\\\\\n"
Specifies the string to place the device in "millimeter" mode.
.TP
.BI "move " "G00 X%f Y%f\\\\\\\\n"
Specifies a C-style printf format for repositioning the output without
drawing. This format should contain two %f instances, the first is
used for the X coordinate, the second for Y.
.TP
.BI "draw " "G01 X%f Y%f F%f S%f\\\\\\\\n"
Specifies a C-style printf format for drawing a straight line. This
format should contain two to four %f instances, the first is used for the X
coordinate, the second for Y, followed by an (optional) feed rate and
(optional) spindle speed.
.TP
.BI "feed " "true or false"
Indicates whether the draw element includes a %f required for
the feed rate.
.TP
.BI "speed " "true or false"
Indicates whether the draw element includes a %f required for
the spindle speed.
.TP
.BI "y-invert " "true or false"
Indicates whether y values indicate upwards (true) or downwards
(false) motion.
.TP
.BI "stop " "M30\\\\\\\\n"
Specifies the string emitted after all drawing is done.
.PP
Gcode-text first emits the "start" string, then one of "inch" or
"mm". Then, drawing is done by emitting a sequence of "move" and
"draw" operations. Finally, drawing is finished with the "stop" string
and the output file is closed.
.PP
Here's what the default configuration looks like in JSON form:
.nf
{
    "start" : "G90\nG17\\n",
    "inch" : "G20\\n",
    "mm" : "G10\\n",
    "move" : "G00 X%f Y%f\\n",
    "draw" : "G01 X%f Y%f F%f S%f\\n",
    "feed" : true,
    "speed" : true,
    "stop" : "M30\\n"
}
.fi
.SH AUTHOR
\fIGcode-text\fP is the work of Keith Packard <keithp@keithp.com>.
.\"
.PP
Gcode-text is
.br
Copyright 2023 Keith Packard.
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.
.PP
This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.
.PP
You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
