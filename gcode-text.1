.TH GCODE-TEXT 1
.SH NAME
gcode-text \- render text as gcode
.SH SYNOPSIS
gcode-text [options] [input files] ...
.SH DESCRIPTION
.PP
\fIGcode-text\fP renders stroked text to gcode, using glyphs
originally derived from the Hershey fonts. Each line of text is
rendered to separate rectangle, where rectangles may be defined
using a gcode template or parametrically on the command line.
.PP
The source text may come from text files or from command line
arguments.
.SH USAGE
.PP
An un-flagged argument is treated as an input file.
.PP
Options are as follows:
.TP
.B "--help,--usage"
Print a help/usage message and exit.
.TP
.BI "-V,--version"
Prints the version number and immediately exits.
.TP
.BI "-i,--inch "
Use inch units in the generated file. This is the default.
.TP
.BI "-m,--mm"
Use millimeter units in the generated file.
.TP
.BI "-O,--oblique"
Add a slight sheer transform in X.
.TP
.BI "-f,--flatness " flatness
Set the spline decomposition tolerance in output units. The default is
0.001.
.TP
.BI "-s,--speed " speed
Set the feed rate
.TP
.BI "-t,--template " template
Specifies a gcode template file. The bounding box of each separate
polygon in the template specifies a region for one line of text.
.TP
.BI "-d,--device " device-spec
Specifies a device template file. This is a JSON file containing
definitions for drawing to the target. See the DEVICE SPEC section
below.
.TP
.BI "-S,--settings " setting,...
Specifies a comma-separated list of device-specific settings. See
the "settings" and "setting-values" items in the DEVICE SPEC section below.
.TP
.BI "-o,--output " output
Specifies the output file name.
.TP
.BI "-b,--border " border
Defines the minimum space between text and each bounding
box. The default is 0.1.
.TP
.BI "-x,--start-x " start-x
Defines the starting X location for parametrically generated boxes.
.TP
.BI "-y,--start-y " start-y
Defines the starting Y location for parametrically generated boxes.
.TP
.BI "-w,--width " width
Defines the width for parametrically generated boxes.
.TP
.BI "-h,--height " height
Defines the height for parametrically generated boxes.
.TP
.BI "-X,--delta-x " delta-x
Defines the X offset between parametrically generated boxes.
.TP
.BI "-Y,--delta-y " delta-y
Defines the Y offset between parametrically generated boxes.
.TP
.BI "-c,--columns " columns
Defines the number of columns of parametrically generated boxes.
.TP
.BI "-v,--value " value
Sets an initial numeric value for generated text.
.TP
.BI "-n,--number " number
Specifies the number of generated numeric text values
.TP
.BI "-T,--text " string
Specifies a single line of text
.TP
.BI "-C,--config-dir " directory
Specifies the path to device configuration files.
.SH EXAMPLES
.PP
Draw "hello world" into a 4"x1" box at 1"x1"
.nf
$ gcode-text -o output.gcode -T "hello world" -w 4 -h 1 -x 1 -y 1
.fi
.PP
Draw numbers starting at 1 using the sample template
.nf
$ gcode-text -o output.gcode -v 1 -t template
.fi
.PP
Draw 10 numbers from 10232 to 10241 in a 2x5 grid of 0.25"x0.1" boxes
spaced 4"x1.5" apart and offset by 1.5"x1" from the origin with a
border of 0.01" around the text:
.nf
$ gcode-text -o output.gcode -v 10232 -n 10 -c 2 -x 1.5 -y 1 -w .25 -h .1 -X 4 -Y 1.5 -b 0.01
.fi
.SH DEVICE SPEC
.PP
This file contains device-specific output customization, providing
control over the strings used to drive the target. This JSON file
should contain a single dictionary with keys mapping to string
values. Each value can contain embedded newlines as necessary;
gcode-text doesn't emit any newlines itself. If not provided in the
configuration file (or if no configuration file is provided), the
default values shown below will be used instead.
.TP
.BI "start " "G90\\\\\\\\nG17\\\\\\\\n"
Specifies a string emitted before any drawing is done to set up the
target.
.TP
.BI "settings " "\"\""
Specifies a C-style printf format for outputing device-specific
settings. If the string is empty, this element is skipped.
.TP
.BI "setting-values " "\"\""
Specifies an array of strings, one for each %s value present in the
"settings" value. These can be replaced on the command line using
the --settings option.
.TP
.BI "inch " "G20\\\\\\\\n"
Specifies the string to place the device in "inch" mode.
.TP
.BI "mm " "G21\\\\\\\\n"
Specifies the string to place the device in "millimeter" mode.
.TP
.BI "move " "G00 X%f Y%f\\\\\\\\n"
Specifies a C-style printf format for repositioning the output without
drawing. This format should contain two %f instances, the first is
used for the X coordinate, the second for Y.
.TP
.BI "draw " "G01 X%f Y%f F%f\\\\\\\\n"
Specifies a C-style printf format for drawing a straight line. This
format should contain two or three %f instances, the first is used for the X
coordinate, the second for Y, the (optional) third is used for
speed (aka feed rate).
.TP
.BI "speed " "true or false"
Indicates whether the draw element includes the third %f required for
the speed.
.TP
.BI "y-invert " "true or false"
Indicates whether y values indicate upwards (true) or downwards
(false) motion.
.TP
.BI "stop " "M30\\\\\\\\n"
Specifies the string emitted after all drawing is done.
.PP
Gcode-text first emits the "start" string, then one of "inch" or
"mm". Then, drawing is done by emitting a sequence of "move" and
"draw" operations. Finally, drawing is finished with the "stop" string
and the output file is closed.
.PP
Here's what the default configuration looks like in JSON form:
.nf

{
    "start" : "G90\nG17\\n",
    "inch" : "G20\\n",
    "mm" : "G10\\n",
    "move" : "G00 X%f Y%f\\n",
    "draw" : "G01 X%f Y%f F%f\\n",
    "stop" : "M30\\n"
}
.fi
.SH AUTHOR
\fIGcode-text\fP is the work of Keith Packard <keithp@keithp.com>.
.\"
.PP
Gcode-text is
.br
Copyright 2023 Keith Packard.
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.
.PP
This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.
.PP
You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
